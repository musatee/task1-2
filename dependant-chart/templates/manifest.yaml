# create namespace as per environment
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.namespace.name }}
--- 
# create Docker hub secret
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOnsidXNlcm5hbWUiOiJtdXNhdGVlMTEiLCJwYXNzd29yZCI6Im11c2F0ZWUxMSIsImVtYWlsIjoibXVzYS5oc3R1MTFAZ21haWwuY29tIiwiYXV0aCI6ImJYVnpZWFJsWlRFeE9tMTFjMkYwWldVeE1RPT0ifX19
kind: Secret
metadata:
  name: {{ .Values.secret.name }}
  namespace: {{ .Values.namespace.name }}
type: kubernetes.io/dockerconfigjson

--- 

# Create Deployment
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: {{ .Values.deployment.name }}
  namespace: {{ .Values.namespace.name }}
spec: 
  replicas: {{ .Values.deployment.replicas | default 2 }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 50%
    type: RollingUpdate

  selector:
    matchLabels: 
      app: demo-app   
  template:
    metadata:
      name: demo-pod
      labels:
        app: demo-app
    spec:
      containers:
        - 
          name: demo-app
          {{- with .Values.deployment.image }}
          image: {{ .repo }}:{{ .tag | default "latest" }}
          {{- end }}
          imagePullPolicy: Always
          ports:
          {{- with .Values.deployment.ports }}
          - containerPort: {{ .containerPort }}
          {{- end }}
      imagePullSecrets:
      - name: {{ .Release.Name }}
--- 

# Create service 
apiVersion: v1 
kind: Service   
metadata: 
  name: {{ .Values.service.name }}
  namespace: {{ .Values.namespace.name }}
spec: 
 type: {{ .Values.service.type }}
 ports:
 {{- with .Values.service.ports }}
 - port: {{ .port }}
   targetPort: {{ .targetPort }}
  {{- end }}
 selector:
  app: demo-app

